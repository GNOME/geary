#
# Geary CI config.
#

stages:
  - build

variables:
  BUILD_DIR: build
  CONFIG_CMD: ./configure
  BUILD_CMD: make
  TEST_CMD: xvfb-run make test
  INSTALL_CMD: make install
  FEDORA_BUILD_DEPS: gcc make
  FEDORA_DEPS: vala gobject-introspection-devel intltool cmake
               desktop-file-utils gnome-doc-utils libcanberra-devel
               libgee-devel glib2-devel gmime-devel gtk3-devel
               libnotify-devel sqlite-devel webkitgtk4-devel
               libsecret-devel libxml2-devel vala-tools gcr-devel
               enchant-devel
  FEDORA_TEST_DEPS: Xvfb
  DEBIAN_DEPS: valac libgirepository1.0-dev intltool cmake
               desktop-file-utils gnome-doc-utils libcanberra-dev
               libgee-0.8-dev libglib2.0-dev libgmime-2.6-dev
               libgtk-3-dev libsecret-1-dev libxml2-dev libnotify-dev
               libsqlite3-dev libwebkit2gtk-4.0-dev libgcr-3-dev
               libenchant-dev
  DEBIAN_TEST_DEPS: xauth xvfb
  UBUNTU_DEPS: $DEBIAN_DEPS libunity-dev libmessaging-menu-dev
  UBUNTU_TEST_DEPS: xauth xvfb

#
# Stages
#

fedora:
  stage: build
  image: fedora:latest
  before_script:
    - dnf update -y --nogpgcheck
    - dnf install -y --nogpgcheck $FEDORA_BUILD_DEPS $FEDORA_DEPS $FEDORA_TEST_DEPS
  script:
    - $CONFIG_CMD
    - $BUILD_CMD
    - $TEST_CMD
    - $INSTALL_CMD

debian:
  stage: build
  image: debian:stable
  before_script:
    - apt-get update
    - apt-get install -q -y --no-install-recommends $DEBIAN_DEPS $DEBIAN_TEST_DEPS
  script:
    - $CONFIG_CMD
    - $BUILD_CMD
    - $TEST_CMD
    - $INSTALL_CMD

ubuntu:
  stage: build
  image: ubuntu:xenial
  before_script:
    - apt-get update
    - apt-get install -q -y --no-install-recommends $UBUNTU_DEPS $UBUNTU_TEST_DEPS
  script:
    - $CONFIG_CMD
    - $BUILD_CMD
    - $TEST_CMD
    - $INSTALL_CMD

deb-package:
  stage: build
  image: ubuntu:xenial
  before_script:
    - apt-get update
    - apt-get install -q -y --no-install-recommends packaging-dev $UBUNTU_DEPS
  script:
    - dpkg-buildpackage -b -us -uc

flatpak-package:
  image: registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:3.28
  stage: build

  variables:
    GIT_SUBMODULE_STRATEGY: normal
    FLATPAK_ARTIFACT: geary-git.flatpak

  script:
    - flatpak-builder flatpak-build org.gnome.Geary.json
    - flatpak build-export flatpak-repo flatpak-build --update-appstream
    - flatpak build-bundle flatpak-repo $FLATPAK_ARTIFACT
        --runtime-repo=https://sdk.gnome.org/gnome-nightly.flatpakrepo
        org.gnome.Geary

  artifacts:
    paths:
      - $FLATPAK_ARTIFACT
    expire_in: 2 days

  cache:
    # JOB_NAME - Each job will have it's own cache
    # COMMIT_REF_SLUG = Lowercase name of the branch
    # ^ Keep diffrerent caches for each branch
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      # Cache .flatpak-builder
      - .flatpak-builder/cache/
      - .flatpak-builder/downloads/
      - .flatpak-builder/git/
